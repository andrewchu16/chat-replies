services:
  postgres:
    image: postgres:17-alpine
    container_name: chat-replies-db-dev
    env_file: 
      - .env.local
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-chat_replies_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-chat_replies_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - db-network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: chat-replies-server-dev
    env_file:
      - .env.local
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-chat_replies_dev}
      - ENVIRONMENT=development
      - DEBUG=true
      - ALLOWED_ORIGINS=http://${CLIENT_HOST:-localhost}:${CLIENT_PORT:-3000},http://client:3000
    ports:
      - "${SERVER_PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    networks:
      - db-network
      - chat-network
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: /app/src

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: chat-replies-client-dev
    env_file:
      - .env.local
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_SERVER_URL=${SERVER_HOST:-localhost}:${SERVER_PORT:-8000}
    ports:
      - "${CLIENT_PORT:-3000}:3000"
    command: ["npm", "run", "dev"]
    networks:
      - chat-network
    develop:
      watch:
        - action: sync
          path: ./client
          target: /app
  
  server-test:
    build:
      context: ./server
      dockerfile: Dockerfile.test
    container_name: chat-replies-server-test
    environment:
      DATABASE_URL: "sqlite+aiosqlite:///:memory:"
      ENVIRONMENT: "test"
    command: ["python", "-m", "pytest", "tests/", "-v"]
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: /app/src
        - action: sync
          path: ./server/tests
          target: /app/tests

volumes:
  postgres_dev_data:
    driver: local

networks:
  chat-network:
    driver: bridge
  db-network:
    driver: bridge
